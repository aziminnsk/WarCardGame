<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- saved from url=(0066)file:///C:/Users/Prof%20Lexi/.grasp_settings/doc_tmp/WarRules.html -->
<html lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<!-- Generated by javadoc (version 1.7.0_45) on Wed Apr 30 21:56:49 EDT 2014 -->
<meta http-equiv="Content-Type" content="text/html" charset="UTF-8">
<title>WarRules</title>
<meta name="date" content="2014-04-30">
<link rel="stylesheet" type="text/css" href="./WarRules_files/stylesheet.css" title="Style">
</head>
<body>
<script type="text/javascript"><!--
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="WarRules";
    }
//-->
</script>
<noscript>
&lt;div&gt;JavaScript is disabled on your browser.&lt;/div&gt;
</noscript>
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<h2 title="Class WarRules" class="title">Class WarRules</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li><a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</a></li>
<li>
<ul class="inheritance">
<li>Card</li>
<li>
<ul class="inheritance">
<li>WarRules</li>
</ul>
</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<br>
<pre>public class <span class="strong">WarRules</span>
extends Card</pre>
<div class="block">This class extends the Card class
   The purpose is to create a set of rules that
   will be used in the game of War</div>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- =========== FIELD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="field_summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tbody><tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Field and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>(package private) Deck</code></td>
<td class="colLast"><code><strong><a href="file:///C:/Users/Prof%20Lexi/.grasp_settings/doc_tmp/WarRules.html#deck">deck</a></strong></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>(package private) int</code></td>
<td class="colLast"><code><strong><a href="file:///C:/Users/Prof%20Lexi/.grasp_settings/doc_tmp/WarRules.html#FULLDECK">FULLDECK</a></strong></code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>(package private) int</code></td>
<td class="colLast"><code><strong><a href="file:///C:/Users/Prof%20Lexi/.grasp_settings/doc_tmp/WarRules.html#HALFDECK">HALFDECK</a></strong></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private <a href="http://docs.oracle.com/javase/7/docs/api/java/util/ArrayList.html?is-external=true" title="class or interface in java.util">ArrayList</a>&lt;Card&gt;</code></td>
<td class="colLast"><code><strong><a href="file:///C:/Users/Prof%20Lexi/.grasp_settings/doc_tmp/WarRules.html#p1">p1</a></strong></code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private <a href="http://docs.oracle.com/javase/7/docs/api/java/util/ArrayList.html?is-external=true" title="class or interface in java.util">ArrayList</a>&lt;Card&gt;</code></td>
<td class="colLast"><code><strong><a href="file:///C:/Users/Prof%20Lexi/.grasp_settings/doc_tmp/WarRules.html#p1Turn">p1Turn</a></strong></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private <a href="http://docs.oracle.com/javase/7/docs/api/java/util/ArrayList.html?is-external=true" title="class or interface in java.util">ArrayList</a>&lt;Card&gt;</code></td>
<td class="colLast"><code><strong><a href="file:///C:/Users/Prof%20Lexi/.grasp_settings/doc_tmp/WarRules.html#p2">p2</a></strong></code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private <a href="http://docs.oracle.com/javase/7/docs/api/java/util/ArrayList.html?is-external=true" title="class or interface in java.util">ArrayList</a>&lt;Card&gt;</code></td>
<td class="colLast"><code><strong><a href="file:///C:/Users/Prof%20Lexi/.grasp_settings/doc_tmp/WarRules.html#p2Turn">p2Turn</a></strong></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>(package private) <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Random.html?is-external=true" title="class or interface in java.util">Random</a></code></td>
<td class="colLast"><code><strong><a href="file:///C:/Users/Prof%20Lexi/.grasp_settings/doc_tmp/WarRules.html#rand">rand</a></strong></code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>(package private) int</code></td>
<td class="colLast"><code><strong><a href="file:///C:/Users/Prof%20Lexi/.grasp_settings/doc_tmp/WarRules.html#theWinner">theWinner</a></strong></code>&nbsp;</td>
</tr>
</tbody></table>
<ul class="blockList">
<li class="blockList"><a name="fields_inherited_from_class_Card">
<!--   -->
</a>
<h3>Fields inherited from class&nbsp;Card</h3>
<code>ACE, CLUBS, DIAMONDS, HEARTS, JACK, KING, QUEEN, rank, SPADES, suit</code></li>
</ul>
</li>
</ul>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tbody><tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="file:///C:/Users/Prof%20Lexi/.grasp_settings/doc_tmp/WarRules.html#WarRules()">WarRules</a></strong>()</code>
<div class="block">Default Constructor.</div>
</td>
</tr>
</tbody></table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method_summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span>Methods</span><span class="tabEnd">&nbsp;</span></caption>
<tbody><tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="file:///C:/Users/Prof%20Lexi/.grasp_settings/doc_tmp/WarRules.html#createDecks()">createDecks</a></strong>()</code>
<div class="block">This method splits the main deck
      into 2 smaller decks which are given
      to each player.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="file:///C:/Users/Prof%20Lexi/.grasp_settings/doc_tmp/WarRules.html#findWinner()">findWinner</a></strong>()</code>
<div class="block">This method returns the winner of the
      game if there is one</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>Card</code></td>
<td class="colLast"><code><strong><a href="file:///C:/Users/Prof%20Lexi/.grasp_settings/doc_tmp/WarRules.html#getP1TopCard()">getP1TopCard</a></strong>()</code>
<div class="block">This method gets the top card from
      the player 1 deck</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>Card</code></td>
<td class="colLast"><code><strong><a href="file:///C:/Users/Prof%20Lexi/.grasp_settings/doc_tmp/WarRules.html#getP2TopCard()">getP2TopCard</a></strong>()</code>
<div class="block">This method gets the top card from
      the player 2 deck</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="file:///C:/Users/Prof%20Lexi/.grasp_settings/doc_tmp/WarRules.html#isEmpty()">isEmpty</a></strong>()</code>
<div class="block">Checks to see if either of the decks are empty
      and sets the winner.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="file:///C:/Users/Prof%20Lexi/.grasp_settings/doc_tmp/WarRules.html#main(java.lang.String[])">main</a></strong>(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>[]&nbsp;args)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="file:///C:/Users/Prof%20Lexi/.grasp_settings/doc_tmp/WarRules.html#p1DeckSize()">p1DeckSize</a></strong>()</code>
<div class="block">This method finds the size of the
      deck and returns it</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="file:///C:/Users/Prof%20Lexi/.grasp_settings/doc_tmp/WarRules.html#p1Turn()">p1Turn</a></strong>()</code>
<div class="block">This method takes two cards</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="file:///C:/Users/Prof%20Lexi/.grasp_settings/doc_tmp/WarRules.html#p1Win()">p1Win</a></strong>()</code>
<div class="block">This method takes the cards from the turn
      arrays and adds them to the first
      player's deck</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="file:///C:/Users/Prof%20Lexi/.grasp_settings/doc_tmp/WarRules.html#p2DeckSize()">p2DeckSize</a></strong>()</code>
<div class="block">This method finds the size of the
      deck and returns it</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="file:///C:/Users/Prof%20Lexi/.grasp_settings/doc_tmp/WarRules.html#p2Turn()">p2Turn</a></strong>()</code>
<div class="block">This method takes two cards</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="file:///C:/Users/Prof%20Lexi/.grasp_settings/doc_tmp/WarRules.html#p2Win()">p2Win</a></strong>()</code>
<div class="block">This method takes the cards from the turn
      arrays and adds them to the second
      player's deck</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="file:///C:/Users/Prof%20Lexi/.grasp_settings/doc_tmp/WarRules.html#returnCards()">returnCards</a></strong>()</code>
<div class="block">This method returns the cards that was taken
      and returns them to their decks</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="file:///C:/Users/Prof%20Lexi/.grasp_settings/doc_tmp/WarRules.html#weGotAWar()">weGotAWar</a></strong>()</code>
<div class="block">This method is used when a War occurs
      gets 3 cards and plays a 4th, with the winner
      taking all the cards</div>
</td>
</tr>
</tbody></table>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_Card">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;Card</h3>
<code>equals, getPic, getRank, getSuit, getSuiteString, greaterThan, toString</code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</a></h3>
<code><a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#clone()" title="class or interface in java.lang">clone</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang">equals</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#finalize()" title="class or interface in java.lang">finalize</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang">getClass</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang">hashCode</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang">notify</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang">notifyAll</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang">wait</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang">wait</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#wait(long, int)" title="class or interface in java.lang">wait</a></code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<ul class="blockList">
<li class="blockList"><a name="field_detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a name="p1">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>p1</h4>
<pre>private final&nbsp;<a href="http://docs.oracle.com/javase/7/docs/api/java/util/ArrayList.html?is-external=true" title="class or interface in java.util">ArrayList</a>&lt;Card&gt; p1</pre>
</li>
</ul>
<a name="p2">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>p2</h4>
<pre>private final&nbsp;<a href="http://docs.oracle.com/javase/7/docs/api/java/util/ArrayList.html?is-external=true" title="class or interface in java.util">ArrayList</a>&lt;Card&gt; p2</pre>
</li>
</ul>
<a name="p1Turn">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>p1Turn</h4>
<pre>private final&nbsp;<a href="http://docs.oracle.com/javase/7/docs/api/java/util/ArrayList.html?is-external=true" title="class or interface in java.util">ArrayList</a>&lt;Card&gt; p1Turn</pre>
</li>
</ul>
<a name="p2Turn">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>p2Turn</h4>
<pre>private final&nbsp;<a href="http://docs.oracle.com/javase/7/docs/api/java/util/ArrayList.html?is-external=true" title="class or interface in java.util">ArrayList</a>&lt;Card&gt; p2Turn</pre>
</li>
</ul>
<a name="FULLDECK">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>FULLDECK</h4>
<pre>final&nbsp;int FULLDECK</pre>
<dl><dt><span class="strong">See Also:</span></dt><dd><a href="file:///C:/Users/Prof%20Lexi/.grasp_settings/doc_tmp/constant-values.html#WarRules.FULLDECK">Constant Field Values</a></dd></dl>
</li>
</ul>
<a name="HALFDECK">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>HALFDECK</h4>
<pre>final&nbsp;int HALFDECK</pre>
<dl><dt><span class="strong">See Also:</span></dt><dd><a href="file:///C:/Users/Prof%20Lexi/.grasp_settings/doc_tmp/constant-values.html#WarRules.HALFDECK">Constant Field Values</a></dd></dl>
</li>
</ul>
<a name="theWinner">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>theWinner</h4>
<pre>int theWinner</pre>
</li>
</ul>
<a name="deck">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>deck</h4>
<pre>Deck deck</pre>
</li>
</ul>
<a name="rand">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>rand</h4>
<pre><a href="http://docs.oracle.com/javase/7/docs/api/java/util/Random.html?is-external=true" title="class or interface in java.util">Random</a> rand</pre>
</li>
</ul>
</li>
</ul>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="WarRules()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>WarRules</h4>
<pre>public&nbsp;WarRules()</pre>
<div class="block">Default Constructor. Initializes 
      the card class, and prints introduction 
      of the game.</div>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method_detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="createDecks()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>createDecks</h4>
<pre>public&nbsp;void&nbsp;createDecks()</pre>
<div class="block">This method splits the main deck
      into 2 smaller decks which are given
      to each player.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>length</code> - int giving length of main deck</dd><dd><code>aCard</code> - gives a random int</dd><dd><code>foundCard</code> - Card object used with a random int and added to a deck</dd></dl>
</li>
</ul>
<a name="getP1TopCard()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getP1TopCard</h4>
<pre>public&nbsp;Card&nbsp;getP1TopCard()</pre>
<div class="block">This method gets the top card from
      the player 1 deck</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>card the first Card object in player 1's deck</dd></dl>
</li>
</ul>
<a name="getP2TopCard()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getP2TopCard</h4>
<pre>public&nbsp;Card&nbsp;getP2TopCard()</pre>
<div class="block">This method gets the top card from
      the player 2 deck</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>card the first Card object in player 2's deck</dd></dl>
</li>
</ul>
<a name="weGotAWar()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>weGotAWar</h4>
<pre>public&nbsp;int&nbsp;weGotAWar()</pre>
<div class="block">This method is used when a War occurs
      gets 3 cards and plays a 4th, with the winner
      taking all the cards</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>winner</code> - the int determining who won the war</dd><dd><code>war1</code> - ArrayList holding player 1's cards for the war</dd><dd><code>war2</code> - ArrayList holding player 2's cards for the war</dd><dd><code>scard1</code> - holds the card while it is removed from the player's deck</dd><dd><code>scard2</code> - holds the card while it ir removed from the second player's deck</dd><dd><code>gun1</code> - holds the last card taken from the player's deck</dd><dd><code>gun2</code> - holds the last card taken from the second player's deck</dd><dd><code>combat</code> - boolean determing who won the war</dd><dd><code>prize</code> - holds the card from the war deck to be used</dd>
<dt><span class="strong">Returns:</span></dt><dd>winner returns the result of the war</dd></dl>
</li>
</ul>
<a name="isEmpty()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isEmpty</h4>
<pre>public&nbsp;boolean&nbsp;isEmpty()</pre>
<div class="block">Checks to see if either of the decks are empty
      and sets the winner.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>gameOver</code> - boolean determining if the game is over</dd>
<dt><span class="strong">Returns:</span></dt><dd>gameOver returns the result of the game</dd></dl>
</li>
</ul>
<a name="findWinner()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>findWinner</h4>
<pre>public&nbsp;int&nbsp;findWinner()</pre>
<div class="block">This method returns the winner of the
      game if there is one</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>theWinner int representing winner of the game.</dd></dl>
</li>
</ul>
<a name="p1Turn()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>p1Turn</h4>
<pre>public&nbsp;void&nbsp;p1Turn()</pre>
<div class="block">This method takes two cards</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>turnCard</code> - the card being used in the turn</dd></dl>
</li>
</ul>
<a name="p2Turn()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>p2Turn</h4>
<pre>public&nbsp;void&nbsp;p2Turn()</pre>
<div class="block">This method takes two cards</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>turnCard</code> - is the card that are being used in the turn</dd></dl>
</li>
</ul>
<a name="p1Win()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>p1Win</h4>
<pre>public&nbsp;void&nbsp;p1Win()</pre>
<div class="block">This method takes the cards from the turn
      arrays and adds them to the first
      player's deck</div>
</li>
</ul>
<a name="p2Win()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>p2Win</h4>
<pre>public&nbsp;void&nbsp;p2Win()</pre>
<div class="block">This method takes the cards from the turn
      arrays and adds them to the second
      player's deck</div>
</li>
</ul>
<a name="p1DeckSize()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>p1DeckSize</h4>
<pre>public&nbsp;int&nbsp;p1DeckSize()</pre>
<div class="block">This method finds the size of the
      deck and returns it</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>size</code> - the int value for the size of the deck</dd>
<dt><span class="strong">Returns:</span></dt><dd>size the int</dd></dl>
</li>
</ul>
<a name="p2DeckSize()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>p2DeckSize</h4>
<pre>public&nbsp;int&nbsp;p2DeckSize()</pre>
<div class="block">This method finds the size of the
      deck and returns it</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>size</code> - the int value for the size of the deck</dd>
<dt><span class="strong">Returns:</span></dt><dd>size the int</dd></dl>
</li>
</ul>
<a name="returnCards()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>returnCards</h4>
<pre>public&nbsp;void&nbsp;returnCards()</pre>
<div class="block">This method returns the cards that was taken
      and returns them to their decks</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>badCard</code> - the cards from being played</dd></dl>
</li>
</ul>
<a name="main(java.lang.String[])">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>main</h4>
<pre>public static&nbsp;void&nbsp;main(<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>[]&nbsp;args)</pre>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->


</body></html>